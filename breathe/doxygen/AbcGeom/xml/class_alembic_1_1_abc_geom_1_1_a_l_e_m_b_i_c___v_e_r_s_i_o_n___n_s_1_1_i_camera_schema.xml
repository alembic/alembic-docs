<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema" kind="class" prot="public">
    <compoundname>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a924f0c18b1801e94b05b51803102812c" prot="public" static="no">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema" kindref="compound">ICameraSchema</ref></type>
        <definition>typedef ICameraSchema Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::this_type</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>By convention we always define this_type in AbcGeom classes. Used by unspecified-bool-type conversion below </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="58" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6960bef936318db680e1ed892a411cce" prot="protected" static="no" mutable="no">
        <type>Abc::IScalarProperty</type>
        <definition>Abc::IScalarProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_coreProperties</definition>
        <argsstring></argsstring>
        <name>m_coreProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="165" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a7c54d19d81e181acdb948965bf72fd4d" prot="protected" static="no" mutable="no">
        <type>Abc::IBox3dProperty</type>
        <definition>Abc::IBox3dProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_childBoundsProperty</definition>
        <argsstring></argsstring>
        <name>m_childBoundsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="167" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6398f602de595d6c760b492f1bf9461a" prot="protected" static="no" mutable="no">
        <type>Abc::ICompoundProperty</type>
        <definition>Abc::ICompoundProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_arbGeomParams</definition>
        <argsstring></argsstring>
        <name>m_arbGeomParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="169" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6e936dbcc9a53d8e9dd39260531b168f" prot="protected" static="no" mutable="no">
        <type>Abc::ICompoundProperty</type>
        <definition>Abc::ICompoundProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_userProperties</definition>
        <argsstring></argsstring>
        <name>m_userProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="170" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a33f43612145d19c4ab0a300f427f3f88" prot="protected" static="no" mutable="no">
        <type>Abc::IScalarProperty</type>
        <definition>Abc::IScalarProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_smallFilmBackChannels</definition>
        <argsstring></argsstring>
        <name>m_smallFilmBackChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="172" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a3c191cbcc4b6bbe1574d6698857178e7" prot="protected" static="no" mutable="no">
        <type>Abc::IDoubleArrayProperty</type>
        <definition>Abc::IDoubleArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_largeFilmBackChannels</definition>
        <argsstring></argsstring>
        <name>m_largeFilmBackChannels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="173" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a208887a091cea4c318affa660597aa5a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_film_back_xform_op" kindref="compound">FilmBackXformOp</ref> &gt;</type>
        <definition>std::vector&lt; FilmBackXformOp &gt; Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::m_ops</definition>
        <argsstring></argsstring>
        <name>m_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="176" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a22a6484cc8ef3e52057f45dab301701c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::ICameraSchema</definition>
        <argsstring>()</argsstring>
        <name>ICameraSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default constructor creates an empty OCameraMeshSchema ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="66" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a4e8557811b663e32ebf617e77f78834d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::ICameraSchema</definition>
        <argsstring>(CPROP_PTR iParent, const std::string &amp;iName, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>ICameraSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iName</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This templated, primary constructor creates a new camera writer. The first argument is any Abc (or AbcCoreAbstract) object which can intrusively be converted to an CompoundPropertyWriterPtr to use as a parent, from which the error handler policy for inheritance is also derived. The remaining optional arguments can be used to override the ErrorHandlerPolicy, to specify MetaData, and to set TimeSampling. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="82" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ac44aa5892be66ccbf68b9c7ff4fad444" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::ICameraSchema</definition>
        <argsstring>(CPROP_PTR iParent, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>ICameraSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="91" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1aae95cb0fa3fc21e15831f39a3c4c9df1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::ICameraSchema</definition>
        <argsstring>(const ICameraSchema &amp;iCopy)</argsstring>
        <name>ICameraSchema</name>
        <param>
          <type>const <ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema" kindref="compound">ICameraSchema</ref> &amp;</type>
          <declname>iCopy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="99" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ade309fdb2e3c2fb92e2033ee180ea619" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AbcA::TimeSamplingPtr</type>
        <definition>AbcA::TimeSamplingPtr Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getTimeSampling</definition>
        <argsstring>() const </argsstring>
        <name>getTimeSampling</name>
        <briefdescription>
<para>Default assignment operator used. </para>        </briefdescription>
        <detaileddescription>
<para>Return the time sampling. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="107" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="106" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ae73ea18f78697c733e5373765247ee04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getNumSamples</definition>
        <argsstring>() const </argsstring>
        <name>getNumSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of samples contained in the property. This can be any number, including zero. This returns the number of samples that were written, independently of whether or not they were constant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="114" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a243c6c329c8270e9848caff1e7965107" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::isConstant</definition>
        <argsstring>() const </argsstring>
        <name>isConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ask if we&apos;re constant - no change in value amongst samples, regardless of the time sampling. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a70b6d3950e986b74be6f434ab312115c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::get</definition>
        <argsstring>(CameraSample &amp;oSample, const Abc::ISampleSelector &amp;iSS=Abc::ISampleSelector()) const </argsstring>
        <name>get</name>
        <param>
          <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_camera_sample" kindref="compound">CameraSample</ref> &amp;</type>
          <declname>oSample</declname>
        </param>
        <param>
          <type>const Abc::ISampleSelector &amp;</type>
          <declname>iSS</declname>
          <defval>Abc::ISampleSelector()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6c550bb36a1395b3919dbc88fbff794a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_camera_sample" kindref="compound">CameraSample</ref></type>
        <definition>CameraSample Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getValue</definition>
        <argsstring>(const Abc::ISampleSelector &amp;iSS=Abc::ISampleSelector()) const </argsstring>
        <name>getValue</name>
        <param>
          <type>const Abc::ISampleSelector &amp;</type>
          <declname>iSS</declname>
          <defval>Abc::ISampleSelector()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="125" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a9c7ae10c9dbdc51be0f354dc3180c9ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ICompoundProperty</type>
        <definition>ICompoundProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getArbGeomParams</definition>
        <argsstring>() const </argsstring>
        <name>getArbGeomParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="133" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ad7e0f14b09036f81d706b388fbf381db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ICompoundProperty</type>
        <definition>ICompoundProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getUserProperties</definition>
        <argsstring>() const </argsstring>
        <name>getUserProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="134" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a8b76025f8733ef731d6b77ddffe732a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Abc::IBox3dProperty</type>
        <definition>Abc::IBox3dProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::getChildBoundsProperty</definition>
        <argsstring>() const </argsstring>
        <name>getChildBoundsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="136" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a96d4ca944afcdb446280c6197b0f031d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset returns this function set to an empty, default state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="141" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1adce7ce853c6abec7cf3c2f296a3df929" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <briefdescription>
<para>Returns whether this function set is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="152" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a3c4518d4bd2c6a9a0ba89da4a4bc5db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::ALEMBIC_OVERRIDE_OPERATOR_BOOL</definition>
        <argsstring>(ICameraSchema::valid())</argsstring>
        <name>ALEMBIC_OVERRIDE_OPERATOR_BOOL</name>
        <param>
          <type>ICameraSchema::</type>
          <declname>valid</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unspecified-bool-type operator overload. ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a838f1194ce1f804fe0dc44f569419d27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema::init</definition>
        <argsstring>(const Abc::Argument &amp;iArg0, const Abc::Argument &amp;iArg1)</argsstring>
        <name>init</name>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" line="51" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/ICamera.h" bodystart="50" bodyend="178"/>
    <listofallmembers>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a3c4518d4bd2c6a9a0ba89da4a4bc5db2" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>ALEMBIC_OVERRIDE_OPERATOR_BOOL</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a70b6d3950e986b74be6f434ab312115c" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>get</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a9c7ae10c9dbdc51be0f354dc3180c9ef" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getArbGeomParams</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a8b76025f8733ef731d6b77ddffe732a3" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getChildBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ae73ea18f78697c733e5373765247ee04" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getNumSamples</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ade309fdb2e3c2fb92e2033ee180ea619" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getTimeSampling</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ad7e0f14b09036f81d706b388fbf381db" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getUserProperties</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6c550bb36a1395b3919dbc88fbff794a" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>getValue</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a22a6484cc8ef3e52057f45dab301701c" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>ICameraSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a4e8557811b663e32ebf617e77f78834d" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>ICameraSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1ac44aa5892be66ccbf68b9c7ff4fad444" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>ICameraSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1aae95cb0fa3fc21e15831f39a3c4c9df1" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>ICameraSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a838f1194ce1f804fe0dc44f569419d27" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>init</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a243c6c329c8270e9848caff1e7965107" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>isConstant</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6398f602de595d6c760b492f1bf9461a" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_arbGeomParams</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a7c54d19d81e181acdb948965bf72fd4d" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_childBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6960bef936318db680e1ed892a411cce" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_coreProperties</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a3c191cbcc4b6bbe1574d6698857178e7" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_largeFilmBackChannels</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a208887a091cea4c318affa660597aa5a" prot="private" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_ops</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a33f43612145d19c4ab0a300f427f3f88" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_smallFilmBackChannels</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a6e936dbcc9a53d8e9dd39260531b168f" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>m_userProperties</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a96d4ca944afcdb446280c6197b0f031d" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>reset</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1a924f0c18b1801e94b05b51803102812c" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>this_type</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_camera_schema_1adce7ce853c6abec7cf3c2f296a3df929" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ICameraSchema</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
