<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema" kind="class" prot="public">
    <compoundname>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</compoundname>
    <basecompoundref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema" prot="public" virt="non-virtual">Alembic::AbcGeom::ALEMBIC_VERSION_NS::IGeomBaseSchema&lt; PointsSchemaInfo &gt;</basecompoundref>
    <innerclass refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1_1_sample" prot="public">Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::Sample</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a2084089d477e81110278e7c429a0b4f1" prot="public" static="no">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema" kindref="compound">IPointsSchema</ref></type>
        <definition>typedef IPointsSchema Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::this_type</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>By convention we always define this_type in AbcGeom classes. Used by unspecified-bool-type conversion below </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="98" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1aaeeccddbb47ddfc2be5c1bb7387a787c" prot="protected" static="no" mutable="no">
        <type>Abc::IP3fArrayProperty</type>
        <definition>Abc::IP3fArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::m_positionsProperty</definition>
        <argsstring></argsstring>
        <name>m_positionsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="256" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a53ca146a8ef6daba60d5f821807ca12f" prot="protected" static="no" mutable="no">
        <type>Abc::IUInt64ArrayProperty</type>
        <definition>Abc::IUInt64ArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::m_idsProperty</definition>
        <argsstring></argsstring>
        <name>m_idsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="257" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1aca69216bf294487bf1bcab35a7712502" prot="protected" static="no" mutable="no">
        <type>Abc::IV3fArrayProperty</type>
        <definition>Abc::IV3fArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::m_velocitiesProperty</definition>
        <argsstring></argsstring>
        <name>m_velocitiesProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="258" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a9f3f2b685fcca30875f12a56f01769ae" prot="protected" static="no" mutable="no">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_typed_geom_param" kindref="compound">IFloatGeomParam</ref></type>
        <definition>IFloatGeomParam Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::m_widthsParam</definition>
        <argsstring></argsstring>
        <name>m_widthsParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="259" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae2105de5e02ad56a43f04a105e662571" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::IPointsSchema</definition>
        <argsstring>()</argsstring>
        <name>IPointsSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default constructor creates an empty <ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_o_points_schema" kindref="compound">OPointsSchema</ref> ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="106" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ad6a4e4f39702896cedeffc9b52bc0945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::IPointsSchema</definition>
        <argsstring>(CPROP_PTR iParent, const std::string &amp;iName, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>IPointsSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iName</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This templated, explicit function creates a new scalar property reader. The first argument is any Abc (or AbcCoreAbstract) object which can intrusively be converted to an CompoundPropertyReaderPtr to use as a parent, from which the error handler policy for inheritance is also derived. The remaining optional arguments can be used to override the ErrorHandlerPolicy, to specify MetaData, and to set TimeSamplingType. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="123" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1afe5a02582aafbbfed1352ff772bdabb7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::IPointsSchema</definition>
        <argsstring>(CPROP_PTR iParent, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>IPointsSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor is the same as above, but with default schema name used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="135" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a24dd1778da1e18d4aefc2f7f5009bfac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::IPointsSchema</definition>
        <argsstring>(const IPointsSchema &amp;iCopy)</argsstring>
        <name>IPointsSchema</name>
        <param>
          <type>const <ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema" kindref="compound">IPointsSchema</ref> &amp;</type>
          <declname>iCopy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="142" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a4815c0efed14cf695ba3681e7638f150" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getNumSamples</definition>
        <argsstring>() const </argsstring>
        <name>getNumSamples</name>
        <briefdescription>
<para>Default assignment operator used. </para>        </briefdescription>
        <detaileddescription>
<para>Return the number of samples contained in the property. This can be any number, including zero. This returns the number of samples that were written, independently of whether or not they were constant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="157" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae5f53e05f379b69c2167461ecbe62b85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::isConstant</definition>
        <argsstring>() const </argsstring>
        <name>isConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ask if we&apos;re constant - no change in value amongst samples, regardless of the time sampling. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="162" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae5033ff18cba93a5f7e61e2e8e0320e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AbcA::TimeSamplingPtr</type>
        <definition>AbcA::TimeSamplingPtr Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getTimeSampling</definition>
        <argsstring>() const </argsstring>
        <name>getTimeSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time sampling Information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="167" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a874d88ef81375cc1dac247f990cd7b10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::get</definition>
        <argsstring>(Sample &amp;oSample, const Abc::ISampleSelector &amp;iSS=Abc::ISampleSelector()) const </argsstring>
        <name>get</name>
        <param>
          <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1_1_sample" kindref="compound">Sample</ref> &amp;</type>
          <declname>oSample</declname>
        </param>
        <param>
          <type>const Abc::ISampleSelector &amp;</type>
          <declname>iSS</declname>
          <defval>Abc::ISampleSelector()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="178" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="176" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a730a2d85fc6c172b1ad99b02c8b5d2a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1_1_sample" kindref="compound">Sample</ref></type>
        <definition>Sample Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getValue</definition>
        <argsstring>(const Abc::ISampleSelector &amp;iSS=Abc::ISampleSelector()) const </argsstring>
        <name>getValue</name>
        <param>
          <type>const Abc::ISampleSelector &amp;</type>
          <declname>iSS</declname>
          <defval>Abc::ISampleSelector()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="195" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ac41164461db34da072877880569b9809" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Abc::IP3fArrayProperty</type>
        <definition>Abc::IP3fArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getPositionsProperty</definition>
        <argsstring>() const </argsstring>
        <name>getPositionsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="202" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1af80d17940a89bd5c89e6b15feab98abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Abc::IV3fArrayProperty</type>
        <definition>Abc::IV3fArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getVelocitiesProperty</definition>
        <argsstring>() const </argsstring>
        <name>getVelocitiesProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="207" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ad245bd21a2cd4f14fc4763731a449614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Abc::IUInt64ArrayProperty</type>
        <definition>Abc::IUInt64ArrayProperty Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getIdsProperty</definition>
        <argsstring>() const </argsstring>
        <name>getIdsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="212" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a0be3ac595caf0098fd1769eeddcfe689" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_typed_geom_param" kindref="compound">IFloatGeomParam</ref></type>
        <definition>IFloatGeomParam Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::getWidthsParam</definition>
        <argsstring>() const </argsstring>
        <name>getWidthsParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="217" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a30c29dc7bfb685fea1743250bcd0894e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a6378c04f4ca75331e647daea87f164f3">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset returns this function set to an empty, default state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="230" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ac4b12a0dfa539cb9e6c6af4472f0221b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <reimplements refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1aa49688649c08f669488aadcc974e0a6a">valid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Valid returns whether this function set is valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="242" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a2fc78b917e76fc7a3f027b4df50d273b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::ALEMBIC_OVERRIDE_OPERATOR_BOOL</definition>
        <argsstring>(IPointsSchema::valid())</argsstring>
        <name>ALEMBIC_OVERRIDE_OPERATOR_BOOL</name>
        <param>
          <type>IPointsSchema::</type>
          <declname>valid</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unspecified-bool-type operator overload. ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="250"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a7fd48811932951324c6f014852055f48" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema::init</definition>
        <argsstring>(const Abc::Argument &amp;iArg0, const Abc::Argument &amp;iArg1)</argsstring>
        <name>init</name>
        <reimplements refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a346a39eb65631615398049c7aa9f8845">init</reimplements>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="40">
        <label>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</label>
        <link refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>Abc::ISchema&lt;PointsSchemaInfo &gt;</label>
        <link refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_schema"/>
      </node>
      <node id="41">
        <label>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IGeomBaseSchema&lt; PointsSchemaInfo &gt;</label>
        <link refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="43">
        <label>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</label>
        <link refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_widthsParam</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>Abc::ISchema&lt;PointsSchemaInfo &gt;</label>
        <link refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_schema"/>
      </node>
      <node id="44">
        <label>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IGeomBaseSchema&lt; PointsSchemaInfo &gt;</label>
        <link refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>Alembic::AbcGeom::ALEMBIC_VERSION_NS::ITypedGeomParam&lt; Float32TPTraits &gt;</label>
        <link refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_typed_geom_param"/>
      </node>
    </collaborationgraph>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" line="52" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcGeom/IPoints.h" bodystart="51" bodyend="260"/>
    <listofallmembers>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a2fc78b917e76fc7a3f027b4df50d273b" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>ALEMBIC_OVERRIDE_OPERATOR_BOOL</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a874d88ef81375cc1dac247f990cd7b10" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>get</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a9736726f547c000bdf9baf62206aaf8a" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getArbGeomParams</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a00553f71ee5c5db700c72761e991d89f" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getChildBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ad245bd21a2cd4f14fc4763731a449614" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getIdsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a4815c0efed14cf695ba3681e7638f150" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getNumSamples</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ac41164461db34da072877880569b9809" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getPositionsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1ab0d3bc72027537d6c0ecd94480335bcd" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getSelfBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae5033ff18cba93a5f7e61e2e8e0320e5" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getTimeSampling</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1ad6d664bd9b11a61e1e34dddd9d90654f" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getUserProperties</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a730a2d85fc6c172b1ad99b02c8b5d2a7" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getValue</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1af80d17940a89bd5c89e6b15feab98abe" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getVelocitiesProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a0be3ac595caf0098fd1769eeddcfe689" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>getWidthsParam</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1afd505d2c67a3d5d86a60519e966a009e" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IGeomBaseSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a84288647e074e0df57954383dd02cc56" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IGeomBaseSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a346dd3763ed20551f74baaada21fb166" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IGeomBaseSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a331c2aaa3344c427fa72aa89887ff72a" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IGeomBaseSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a0c4299a17e3534abda898d6c655f8d3f" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IGeomBaseSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1ae9021b2606d76423cf4dfdfab8e3b191" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>info_type</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a7fd48811932951324c6f014852055f48" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>init</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae2105de5e02ad56a43f04a105e662571" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IPointsSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ad6a4e4f39702896cedeffc9b52bc0945" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IPointsSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1afe5a02582aafbbfed1352ff772bdabb7" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IPointsSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a24dd1778da1e18d4aefc2f7f5009bfac" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>IPointsSchema</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ae5f53e05f379b69c2167461ecbe62b85" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>isConstant</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a5e9e8dfce4f66cc6d5c0cbc184861356" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_arbGeomParams</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1ad60ae57e733665228832bb4ebb73f8a3" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_childBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a53ca146a8ef6daba60d5f821807ca12f" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_idsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1aaeeccddbb47ddfc2be5c1bb7387a787c" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_positionsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a69fb55565e4fbb5ab493f087a29833e0" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_selfBoundsProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_geom_base_schema_1a7674a7901895336597726b94fb9ac6d7" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_userProperties</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1aca69216bf294487bf1bcab35a7712502" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_velocitiesProperty</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a9f3f2b685fcca30875f12a56f01769ae" prot="protected" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>m_widthsParam</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a30c29dc7bfb685fea1743250bcd0894e" prot="public" virt="virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>reset</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1a2084089d477e81110278e7c429a0b4f1" prot="public" virt="non-virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>this_type</name></member>
      <member refid="class_alembic_1_1_abc_geom_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_points_schema_1ac4b12a0dfa539cb9e6c6af4472f0221b" prot="public" virt="virtual"><scope>Alembic::AbcGeom::ALEMBIC_VERSION_NS::IPointsSchema</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
