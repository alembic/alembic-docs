<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema" kind="class" prot="public">
    <compoundname>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1adfd6fc112c0681a669dd7b02086c1c91" prot="public" static="no">
        <type><ref refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema" kindref="compound">ICollectionsSchema</ref></type>
        <definition>typedef ICollectionsSchema Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::this_type</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="53" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a6908e6d376f9aa930b3d2887534bbe9c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Abc::IStringArrayProperty &gt;</type>
        <definition>std::vector&lt; Abc::IStringArrayProperty &gt; Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::m_collections</definition>
        <argsstring></argsstring>
        <name>m_collections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="119" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a873136b54f78771a21ddb40350ae0e11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::ICollectionsSchema</definition>
        <argsstring>()</argsstring>
        <name>ICollectionsSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="56" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1acb1006dae8e55410af746d5cb7c7fe6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::ICollectionsSchema</definition>
        <argsstring>(CPROP_PTR iParent, const std::string &amp;iName, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>ICollectionsSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iName</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="64" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1aaa37e02f1b4329ae723afaac6a7975db" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::ICollectionsSchema</definition>
        <argsstring>(CPROP_PTR iParent, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>ICollectionsSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iParent</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor is the same as above, but with default schema name used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="75" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a5d0d677ddfee431e2271a1f80172dfb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CPROP_PTR</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::ICollectionsSchema</definition>
        <argsstring>(CPROP_PTR iThis, Abc::WrapExistingFlag iFlag, const Abc::Argument &amp;iArg0=Abc::Argument(), const Abc::Argument &amp;iArg1=Abc::Argument())</argsstring>
        <name>ICollectionsSchema</name>
        <param>
          <type>CPROP_PTR</type>
          <declname>iThis</declname>
        </param>
        <param>
          <type>Abc::WrapExistingFlag</type>
          <declname>iFlag</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
          <defval>Abc::Argument()</defval>
        </param>
        <briefdescription>
<para>Wrap an existing schema object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="86" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a4751c22055077ec6365766539fcc5eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::ICollectionsSchema</definition>
        <argsstring>(const ICollectionsSchema &amp;iCopy)</argsstring>
        <name>ICollectionsSchema</name>
        <param>
          <type>const <ref refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema" kindref="compound">ICollectionsSchema</ref> &amp;</type>
          <declname>iCopy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="93" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a8701f441a3677306b8dea76e60875574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::getNumCollections</definition>
        <argsstring>()</argsstring>
        <name>getNumCollections</name>
        <briefdescription>
<para>Returns the number of collections that we have. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="98" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a7ba852e8c647013600a143155ceaf24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Abc::IStringArrayProperty</type>
        <definition>Abc::IStringArrayProperty Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::getCollection</definition>
        <argsstring>(size_t i)</argsstring>
        <name>getCollection</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return a collection by index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a8a32eb3173a6a9c764e9d5655d660874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Abc::IStringArrayProperty</type>
        <definition>Abc::IStringArrayProperty Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::getCollection</definition>
        <argsstring>(const std::string &amp;iName)</argsstring>
        <name>getCollection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>iName</declname>
        </param>
        <briefdescription>
<para>Return a collection by name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1af51bfb10a058679157b205dc48c7a4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::getCollectionName</definition>
        <argsstring>(size_t i)</argsstring>
        <name>getCollectionName</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the name of a collection at a given index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a5988bf43db00d5df2a78fd7462e9a3cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <briefdescription>
<para>Returns whether this function set is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="111" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a785305aad97e568e4f7b1e45c816f9c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema::init</definition>
        <argsstring>(const Abc::Argument &amp;iArg0, const Abc::Argument &amp;iArg1)</argsstring>
        <name>init</name>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg0</declname>
        </param>
        <param>
          <type>const Abc::Argument &amp;</type>
          <declname>iArg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" line="50" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/AbcCollection/ICollections.h" bodystart="48" bodyend="121"/>
    <listofallmembers>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a7ba852e8c647013600a143155ceaf24e" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>getCollection</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a8a32eb3173a6a9c764e9d5655d660874" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>getCollection</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1af51bfb10a058679157b205dc48c7a4a3" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>getCollectionName</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a8701f441a3677306b8dea76e60875574" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>getNumCollections</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a873136b54f78771a21ddb40350ae0e11" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>ICollectionsSchema</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1acb1006dae8e55410af746d5cb7c7fe6b" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>ICollectionsSchema</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1aaa37e02f1b4329ae723afaac6a7975db" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>ICollectionsSchema</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a5d0d677ddfee431e2271a1f80172dfb8" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>ICollectionsSchema</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a4751c22055077ec6365766539fcc5eda" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>ICollectionsSchema</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a785305aad97e568e4f7b1e45c816f9c6" prot="protected" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>init</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a6908e6d376f9aa930b3d2887534bbe9c" prot="protected" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>m_collections</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1adfd6fc112c0681a669dd7b02086c1c91" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>this_type</name></member>
      <member refid="class_alembic_1_1_abc_collection_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_i_collections_schema_1a5988bf43db00d5df2a78fd7462e9a3cd" prot="public" virt="non-virtual"><scope>Alembic::AbcCollection::ALEMBIC_VERSION_NS::ICollectionsSchema</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
