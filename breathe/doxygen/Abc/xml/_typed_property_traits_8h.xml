<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="_typed_property_traits_8h" kind="file">
    <compoundname>TypedPropertyTraits.h</compoundname>
    <includes refid="_foundation_8h" local="no">Alembic/Abc/Foundation.h</includes>
    <includedby refid="_i_typed_array_property_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ITypedArrayProperty.h</includedby>
    <includedby refid="_o_typed_array_property_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/OTypedArrayProperty.h</includedby>
    <includedby refid="_i_typed_scalar_property_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ITypedScalarProperty.h</includedby>
    <includedby refid="_all_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/All.h</includedby>
    <includedby refid="_typed_array_sample_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedArraySample.h</includedby>
    <includedby refid="_o_typed_scalar_property_8h" local="no">/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/OTypedScalarProperty.h</includedby>
    <incdepgraph>
      <node id="940">
        <label>assert.h</label>
      </node>
      <node id="937">
        <label>stdlib.h</label>
      </node>
      <node id="935">
        <label>string</label>
      </node>
      <node id="936">
        <label>exception</label>
      </node>
      <node id="933">
        <label>ImathColor.h</label>
      </node>
      <node id="928">
        <label>Alembic/Util/All.h</label>
      </node>
      <node id="932">
        <label>ImathQuat.h</label>
      </node>
      <node id="925">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h</label>
        <link refid="TypedPropertyTraits.h"/>
        <childnode refid="926" relation="include">
        </childnode>
      </node>
      <node id="939">
        <label>string.h</label>
      </node>
      <node id="934">
        <label>iostream</label>
      </node>
      <node id="930">
        <label>ImathBox.h</label>
      </node>
      <node id="926">
        <label>Alembic/Abc/Foundation.h</label>
        <link refid="_foundation_8h_source"/>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
      </node>
      <node id="929">
        <label>ImathVec.h</label>
      </node>
      <node id="927">
        <label>Alembic/AbcCoreAbstract/All.h</label>
      </node>
      <node id="938">
        <label>stdio.h</label>
      </node>
      <node id="931">
        <label>ImathMatrix.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="946">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedArraySample.h</label>
        <link refid="_typed_array_sample_8h_source"/>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="945">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ITypedScalarProperty.h</label>
        <link refid="_i_typed_scalar_property_8h_source"/>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="943">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/All.h</label>
        <link refid="_all_8h_source"/>
      </node>
      <node id="944">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/OTypedArrayProperty.h</label>
        <link refid="_o_typed_array_property_8h_source"/>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="941">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h</label>
        <link refid="TypedPropertyTraits.h"/>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
      </node>
      <node id="947">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/OTypedScalarProperty.h</label>
        <link refid="_o_typed_scalar_property_8h_source"/>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="942">
        <label>/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ITypedArrayProperty.h</label>
        <link refid="_i_typed_array_property_8h_source"/>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_alembic">Alembic</innernamespace>
    <innernamespace refid="namespace_alembic_1_1_abc">Alembic::Abc</innernamespace>
    <innernamespace refid="namespace_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s">Alembic::Abc::ALEMBIC_VERSION_NS</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_typed_property_traits_8h_1acebe0c7c2bd1db6262791af76742e456" prot="public" static="no">
        <name>ALEMBIC_ABC_DECLARE_TYPE_TRAITS</name>
        <param><defname>VAL</defname></param>
        <param><defname>POD</defname></param>
        <param><defname>EXTENT</defname></param>
        <param><defname>INTERP</defname></param>
        <param><defname>PTDEF</defname></param>
        <initializer>struct PTDEF                                                            \
{                                                                       \
    static const PlainOldDataType pod_enum = POD;                       \
    static const int extent = EXTENT;                                   \
    typedef VAL         value_type;                                     \
    static const char * interpretation()  { return ( INTERP ) ; }       \
    static const char * name() { return #PTDEF; }                       \
    static AbcA::DataType     dataType()                                \
    { return AbcA::DataType( POD, EXTENT ) ; }                          \
    static value_type   defaultValue()                                  \
    { value_type v; return v; }                                         \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h" line="66" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_typed_property_traits_8h_1a1d2df215fcb710f38d8756a58cedcaec" prot="public" static="no">
        <name>DECLARE_POD_TRAITS</name>
        <param><defname>POD_TYPE</defname></param>
        <param><defname>PTDEF</defname></param>
        <initializer>struct PTDEF                                                            \
{                                                                       \
    static const PlainOldDataType pod_enum =                            \
                        PODTraitsFromType&lt; POD_TYPE &gt;::pod_enum;        \
    static const int extent = 1;                                        \
    typedef POD_TYPE    value_type;                                     \
    static const char * interpretation()  { return &quot;&quot;; }                \
    static const char * name() { return #PTDEF; }                       \
    static AbcA::DataType     dataType()                                \
    { return AbcA::DataType( PODTraitsFromType&lt; POD_TYPE &gt;::pod_enum, 1 ); } \
    static value_type   defaultValue()                                  \
    { return PODTraitsFromType&lt; POD_TYPE &gt;::default_value(); }          \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h" line="83" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2009-2012,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Sony<sp/>Pictures<sp/>Imageworks,<sp/>Inc.<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Industrial<sp/>Light<sp/>&amp;<sp/>Magic,<sp/>a<sp/>division<sp/>of<sp/>Lucasfilm<sp/>Entertainment<sp/>Company<sp/>Ltd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Sony<sp/>Pictures<sp/>Imageworks,<sp/>nor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Industrial<sp/>Light<sp/>&amp;<sp/>Magic<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>their<sp/>contributors<sp/>may<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_Alembic_Abc_TypedPropertyTraits_h_</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_Alembic_Abc_TypedPropertyTraits_h_</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Alembic/Abc/Foundation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>property<sp/>traits<sp/>class<sp/>maps<sp/>ValueTypes<sp/>with<sp/>their<sp/>protocol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Alembic<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Abc<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ALEMBIC_VERSION_NS<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>macro<sp/>relies<sp/>on<sp/>there<sp/>being<sp/>a<sp/>default<sp/>constructor<sp/>for<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>VAL,<sp/>POD,<sp/>EXTENT,<sp/>INTERP,<sp/>PTDEF<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">struct<sp/>PTDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>PlainOldDataType<sp/>pod_enum<sp/>=<sp/>POD;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>int<sp/>extent<sp/>=<sp/>EXTENT;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>VAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>char<sp/>*<sp/>interpretation()<sp/><sp/>{<sp/>return<sp/>(<sp/>INTERP<sp/>)<sp/>;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>char<sp/>*<sp/>name()<sp/>{<sp/>return<sp/>#PTDEF;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>AbcA::DataType<sp/><sp/><sp/><sp/><sp/>dataType()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>return<sp/>AbcA::DataType(<sp/>POD,<sp/>EXTENT<sp/>)<sp/>;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>value_type<sp/><sp/><sp/>defaultValue()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>value_type<sp/>v;<sp/>return<sp/>v;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLARE_POD_TRAITS(<sp/>POD_TYPE<sp/>,<sp/>PTDEF<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor">struct<sp/>PTDEF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>PlainOldDataType<sp/>pod_enum<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PODTraitsFromType&lt;<sp/>POD_TYPE<sp/>&gt;::pod_enum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>int<sp/>extent<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>POD_TYPE<sp/><sp/><sp/><sp/>value_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>char<sp/>*<sp/>interpretation()<sp/><sp/>{<sp/>return<sp/>&quot;&quot;;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>char<sp/>*<sp/>name()<sp/>{<sp/>return<sp/>#PTDEF;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>AbcA::DataType<sp/><sp/><sp/><sp/><sp/>dataType()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>return<sp/>AbcA::DataType(<sp/>PODTraitsFromType&lt;<sp/>POD_TYPE<sp/>&gt;::pod_enum,<sp/>1<sp/>);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>value_type<sp/><sp/><sp/>defaultValue()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>return<sp/>PODTraitsFromType&lt;<sp/>POD_TYPE<sp/>&gt;::default_value();<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>bool_t,<sp/>BooleanTPTraits<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>uint8_t,<sp/>Uint8TPTraits<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>int8_t,<sp/>Int8TPTraits<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>uint16_t,<sp/>Uint16TPTraits<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>int16_t,<sp/>Int16TPTraits<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>uint32_t,<sp/>Uint32TPTraits<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>int32_t,<sp/>Int32TPTraits<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>uint64_t,<sp/>Uint64TPTraits<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>int64_t,<sp/>Int64TPTraits<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>float16_t,<sp/>Float16TPTraits<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>float32_t,<sp/>Float32TPTraits<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>float64_t,<sp/>Float64TPTraits<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">DECLARE_POD_TRAITS(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>StringTPTraits<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">DECLARE_POD_TRAITS(<sp/>wstring,<sp/>WstringTPTraits<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DECLARE_POD_TRAITS</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2s,<sp/>kInt16POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V2sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2i,<sp/>kInt32POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V2iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2f,<sp/>kFloat32POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V2fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2d,<sp/>kFloat64POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V2dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3s,<sp/>kInt16POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V3sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3i,<sp/>kInt32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V3iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3f,<sp/>kFloat32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V3fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3d,<sp/>kFloat64POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,<sp/>V3dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2s,<sp/>kInt16POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P2sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2i,<sp/>kInt32POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P2iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2f,<sp/>kFloat32POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P2fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2d,<sp/>kFloat64POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P2dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3s,<sp/>kInt16POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P3sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3i,<sp/>kInt32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P3iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3f,<sp/>kFloat32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P3fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V3d,<sp/>kFloat64POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">,<sp/>P3dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box2s,<sp/>kInt16POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box2sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box2i,<sp/>kInt32POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box2iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box2f,<sp/>kFloat32POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box2fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box2d,<sp/>kFloat64POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box2dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box3s,<sp/>kInt16POD,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box3sTPTraits<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box3i,<sp/>kInt32POD,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box3iTPTraits<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box3f,<sp/>kFloat32POD,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box3fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Box3d,<sp/>kFloat64POD,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;box&quot;</highlight><highlight class="normal">,<sp/>Box3dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>M33f,<sp/>kFloat32POD,<sp/>9,<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>M33fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>M33d,<sp/>kFloat64POD,<sp/>9,<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>M33dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>M44f,<sp/>kFloat32POD,<sp/>16,<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>M44fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>M44d,<sp/>kFloat64POD,<sp/>16,<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">,<sp/>M44dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Quatf,<sp/>kFloat32POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;quat&quot;</highlight><highlight class="normal">,<sp/>QuatfTPTraits<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>Quatd,<sp/>kFloat64POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;quat&quot;</highlight><highlight class="normal">,<sp/>QuatdTPTraits<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>colors.<sp/>For<sp/>now,<sp/>using<sp/>&quot;rgb&quot;/&quot;rgba&quot;<sp/>as<sp/>the<sp/>interpretation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C3h,<sp/>kFloat16POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;rgb&quot;</highlight><highlight class="normal">,<sp/>C3hTPTraits<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C3f,<sp/>kFloat32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;rgb&quot;</highlight><highlight class="normal">,<sp/>C3fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C3c,<sp/>kUint8POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;rgb&quot;</highlight><highlight class="normal">,<sp/>C3cTPTraits<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C4h,<sp/>kFloat16POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;rgba&quot;</highlight><highlight class="normal">,<sp/>C4hTPTraits<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C4f,<sp/>kFloat32POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;rgba&quot;</highlight><highlight class="normal">,<sp/>C4fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>C4c,<sp/>kUint8POD,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;rgba&quot;</highlight><highlight class="normal">,<sp/>C4cTPTraits<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//-*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2f,<sp/>kFloat32POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,<sp/>N2fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>V2d,<sp/>kFloat64POD,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,<sp/>N2dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>N3f<sp/>and<sp/>N3d<sp/>is<sp/>typedefed<sp/>in<sp/>Foundation<sp/>from<sp/>V3f<sp/>and<sp/>V3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>N3f,<sp/>kFloat32POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,<sp/>N3fTPTraits<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">ALEMBIC_ABC_DECLARE_TYPE_TRAITS(<sp/>N3d,<sp/>kFloat64POD,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,<sp/>N3dTPTraits<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>ALEMBIC_VERSION_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ALEMBIC_VERSION_NS;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>Abc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>Alembic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/TypedPropertyTraits.h"/>
  </compounddef>
</doxygen>
