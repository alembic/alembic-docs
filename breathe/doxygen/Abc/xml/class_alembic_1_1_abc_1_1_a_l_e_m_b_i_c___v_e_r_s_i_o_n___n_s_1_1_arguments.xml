<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments" kind="class" prot="public">
    <compoundname>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1af8e79b77d0210b122e2404ef0466964d" prot="private" static="no" mutable="no">
        <type>ErrorHandler::Policy</type>
        <definition>ErrorHandler::Policy Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::m_errorHandlerPolicy</definition>
        <argsstring></argsstring>
        <name>m_errorHandlerPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="94" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1ac97d6f88f972ac1b696c4b6e0f445014" prot="private" static="no" mutable="no">
        <type>AbcA::MetaData</type>
        <definition>AbcA::MetaData Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::m_metaData</definition>
        <argsstring></argsstring>
        <name>m_metaData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="95" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a028391e461e1fa428c9ce8805722cbff" prot="private" static="no" mutable="no">
        <type>AbcA::TimeSamplingPtr</type>
        <definition>AbcA::TimeSamplingPtr Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::m_timeSampling</definition>
        <argsstring></argsstring>
        <name>m_timeSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="96" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a8517fcca30ee5ea01e5212cb404a0b98" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::m_timeSamplingIndex</definition>
        <argsstring></argsstring>
        <name>m_timeSamplingIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="97" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6114efd6d730b7834bd6f5938c008521" prot="private" static="no" mutable="no">
        <type>SchemaInterpMatching</type>
        <definition>SchemaInterpMatching Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::m_matching</definition>
        <argsstring></argsstring>
        <name>m_matching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="98" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a3cdf2b79e69e79d028f28bc4982d2204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::Arguments</definition>
        <argsstring>(ErrorHandler::Policy iPolicy=ErrorHandler::kThrowPolicy, const AbcA::MetaData &amp;iMetaData=AbcA::MetaData(), AbcA::TimeSamplingPtr iTimeSampling=AbcA::TimeSamplingPtr(), uint32_t iTimeIndex=0, SchemaInterpMatching iMatch=kNoMatching)</argsstring>
        <name>Arguments</name>
        <param>
          <type>ErrorHandler::Policy</type>
          <declname>iPolicy</declname>
          <defval>ErrorHandler::kThrowPolicy</defval>
        </param>
        <param>
          <type>const AbcA::MetaData &amp;</type>
          <declname>iMetaData</declname>
          <defval>AbcA::MetaData()</defval>
        </param>
        <param>
          <type>AbcA::TimeSamplingPtr</type>
          <declname>iTimeSampling</declname>
          <defval>AbcA::TimeSamplingPtr()</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>iTimeIndex</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>SchemaInterpMatching</type>
          <declname>iMatch</declname>
          <defval>kNoMatching</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="61" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="51" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6c5ef22c2bd00776b3bf1c5cf0905673" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::operator()</definition>
        <argsstring>(const uint32_t &amp;iTimeSamplingIndex)</argsstring>
        <name>operator()</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>iTimeSamplingIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="64" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6c097096e260cf8ad72bd55ed3d39b85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::operator()</definition>
        <argsstring>(const ErrorHandler::Policy &amp;iPolicy)</argsstring>
        <name>operator()</name>
        <param>
          <type>const ErrorHandler::Policy &amp;</type>
          <declname>iPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="67" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1af0bca47514e8b1e67bbbbe1e58501cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::operator()</definition>
        <argsstring>(const AbcA::MetaData &amp;iMetaData)</argsstring>
        <name>operator()</name>
        <param>
          <type>const AbcA::MetaData &amp;</type>
          <declname>iMetaData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="70" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1abbe6aaa630c8a8a8278284c58f11ba33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::operator()</definition>
        <argsstring>(const AbcA::TimeSamplingPtr &amp;iTimeSampling)</argsstring>
        <name>operator()</name>
        <param>
          <type>const AbcA::TimeSamplingPtr &amp;</type>
          <declname>iTimeSampling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="73" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="72" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a7ebc8d168de74a569f36a1a33c75b853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::operator()</definition>
        <argsstring>(const SchemaInterpMatching &amp;iMatching)</argsstring>
        <name>operator()</name>
        <param>
          <type>const SchemaInterpMatching &amp;</type>
          <declname>iMatching</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="76" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a5a12d08400c103015eeb587a496a64ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ErrorHandler::Policy</type>
        <definition>ErrorHandler::Policy Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::getErrorHandlerPolicy</definition>
        <argsstring>() const </argsstring>
        <name>getErrorHandlerPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="79" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="78" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a9c882941f99fad8a14435fcf814c2ebc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const AbcA::MetaData &amp;</type>
        <definition>const AbcA::MetaData&amp; Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::getMetaData</definition>
        <argsstring>() const </argsstring>
        <name>getMetaData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="82" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="81" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1ad6ef8ed8bf08570af5087556f2f1dcc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AbcA::TimeSamplingPtr</type>
        <definition>AbcA::TimeSamplingPtr Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::getTimeSampling</definition>
        <argsstring>() const </argsstring>
        <name>getTimeSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="85" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="84" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a79b06aaa6dc252ffaf065431bac96baf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::getTimeSamplingIndex</definition>
        <argsstring>() const </argsstring>
        <name>getTimeSamplingIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="88" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a4425d133d221668f252dca14a5db9107" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SchemaInterpMatching</type>
        <definition>SchemaInterpMatching Alembic::Abc::ALEMBIC_VERSION_NS::Arguments::getSchemaInterpMatching</definition>
        <argsstring>() const </argsstring>
        <name>getSchemaInterpMatching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="91" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="90" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" line="49" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/Argument.h" bodystart="48" bodyend="99"/>
    <listofallmembers>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a3cdf2b79e69e79d028f28bc4982d2204" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>Arguments</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a5a12d08400c103015eeb587a496a64ff" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>getErrorHandlerPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a9c882941f99fad8a14435fcf814c2ebc" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>getMetaData</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a4425d133d221668f252dca14a5db9107" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>getSchemaInterpMatching</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1ad6ef8ed8bf08570af5087556f2f1dcc1" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>getTimeSampling</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a79b06aaa6dc252ffaf065431bac96baf" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>getTimeSamplingIndex</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1af8e79b77d0210b122e2404ef0466964d" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>m_errorHandlerPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6114efd6d730b7834bd6f5938c008521" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>m_matching</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1ac97d6f88f972ac1b696c4b6e0f445014" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>m_metaData</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a028391e461e1fa428c9ce8805722cbff" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>m_timeSampling</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a8517fcca30ee5ea01e5212cb404a0b98" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>m_timeSamplingIndex</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6c5ef22c2bd00776b3bf1c5cf0905673" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a6c097096e260cf8ad72bd55ed3d39b85" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1af0bca47514e8b1e67bbbbe1e58501cb4" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1abbe6aaa630c8a8a8278284c58f11ba33" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_arguments_1a7ebc8d168de74a569f36a1a33c75b853" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::Arguments</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
