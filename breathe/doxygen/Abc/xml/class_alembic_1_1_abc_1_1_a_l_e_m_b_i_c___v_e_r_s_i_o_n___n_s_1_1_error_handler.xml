<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler" kind="class" prot="public">
    <compoundname>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</compoundname>
    <innerclass refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1_1_context" prot="public">Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::Context</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69" prot="public" static="no">
        <name>Policy</name>
        <enumvalue id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69af2883a1cbe944b9e9129aeab7fda163f" prot="public">
          <name>kQuietNoopPolicy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69ae8467401de1b6d724cb8ae86693a4fe7" prot="public">
          <name>kNoisyNoopPolicy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69a1e0759e856970d40dda780c061eba00a" prot="public">
          <name>kThrowPolicy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="52" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aeceb2ca53b2884fcf1ec51978efa5e75" prot="public" static="no">
        <name>UnknownExceptionFlag</name>
        <enumvalue id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aeceb2ca53b2884fcf1ec51978efa5e75ab83637953af90855b15fea9725f84853" prot="public">
          <name>kUnknownException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="59" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="58" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a958fa8ab73b5c192ef0a7af5943e977a" prot="private" static="no" mutable="no">
        <type>Policy</type>
        <definition>Policy Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::m_policy</definition>
        <argsstring></argsstring>
        <name>m_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="123" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a00b71d0a23019224699f0f73f47c1f3f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::m_errorLog</definition>
        <argsstring></argsstring>
        <name>m_errorLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="124" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a3a055764ecdf6ac4c8ac333e9c51bb69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::ErrorHandler</definition>
        <argsstring>()</argsstring>
        <name>ErrorHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="65" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ad295f62588487467e897e1e26aebe129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::ErrorHandler</definition>
        <argsstring>(Policy iPolicy)</argsstring>
        <name>ErrorHandler</name>
        <param>
          <type>Policy</type>
          <declname>iPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="69" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aa1ace063e74bf2939c07422302ec48bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::operator()</definition>
        <argsstring>(std::exception &amp;iExc, const std::string &amp;iCtx=&quot;&quot;)</argsstring>
        <name>operator()</name>
        <param>
          <type>std::exception &amp;</type>
          <declname>iExc</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iCtx</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default copy constructor Default assignment operator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a6bb5d6bb005d975206685527a1e324e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::operator()</definition>
        <argsstring>(const std::string &amp;iErrMsg, const std::string &amp;iCtx=&quot;&quot;)</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>iErrMsg</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iCtx</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1affc0abd86f80719c57ae7a2d9c66c88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::operator()</definition>
        <argsstring>(UnknownExceptionFlag iUef, const std::string &amp;iCtx=&quot;&quot;)</argsstring>
        <name>operator()</name>
        <param>
          <type>UnknownExceptionFlag</type>
          <declname>iUef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>iCtx</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a7f6235eb0c86bfd1c3c7cdfdf4578dc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Policy</type>
        <definition>Policy Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::getPolicy</definition>
        <argsstring>() const </argsstring>
        <name>getPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="83" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a70da08c61ec91fcd09c9745649dc4ca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::setPolicy</definition>
        <argsstring>(Policy iPolicy)</argsstring>
        <name>setPolicy</name>
        <param>
          <type>Policy</type>
          <declname>iPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="84" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ae7a3f7584f693bd71c701577bffcea28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::getErrorLog</definition>
        <argsstring>() const </argsstring>
        <name>getErrorLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="86" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a8353131649271f71bb10677d8ae1334e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="88" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ab1436cf560cab06b4ce4172084495125" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="90" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a75931506b950f20c491d9f113d2bfb62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler::handleIt</definition>
        <argsstring>(const std::string &amp;iErr)</argsstring>
        <name>handleIt</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>iErr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" line="49" bodyfile="/var/tmp/doNotRemove/local/alembic-1.6.0/include/Alembic/Abc/ErrorHandler.h" bodystart="48" bodyend="125"/>
    <listofallmembers>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ab1436cf560cab06b4ce4172084495125" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>clear</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a3a055764ecdf6ac4c8ac333e9c51bb69" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>ErrorHandler</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ad295f62588487467e897e1e26aebe129" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>ErrorHandler</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ae7a3f7584f693bd71c701577bffcea28" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>getErrorLog</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a7f6235eb0c86bfd1c3c7cdfdf4578dc1" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>getPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a75931506b950f20c491d9f113d2bfb62" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>handleIt</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69ae8467401de1b6d724cb8ae86693a4fe7" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>kNoisyNoopPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69af2883a1cbe944b9e9129aeab7fda163f" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>kQuietNoopPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69a1e0759e856970d40dda780c061eba00a" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>kThrowPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aeceb2ca53b2884fcf1ec51978efa5e75ab83637953af90855b15fea9725f84853" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>kUnknownException</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a00b71d0a23019224699f0f73f47c1f3f" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>m_errorLog</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a958fa8ab73b5c192ef0a7af5943e977a" prot="private" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>m_policy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aa1ace063e74bf2939c07422302ec48bf" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a6bb5d6bb005d975206685527a1e324e3" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1affc0abd86f80719c57ae7a2d9c66c88b" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>operator()</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1ac5f23c506fab1fa34f78cd5292102c69" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>Policy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a70da08c61ec91fcd09c9745649dc4ca9" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>setPolicy</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1aeceb2ca53b2884fcf1ec51978efa5e75" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>UnknownExceptionFlag</name></member>
      <member refid="class_alembic_1_1_abc_1_1_a_l_e_m_b_i_c___v_e_r_s_i_o_n___n_s_1_1_error_handler_1a8353131649271f71bb10677d8ae1334e" prot="public" virt="non-virtual"><scope>Alembic::Abc::ALEMBIC_VERSION_NS::ErrorHandler</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
